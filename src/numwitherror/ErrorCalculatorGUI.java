/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package numwitherror;

import java.awt.event.KeyEvent;
import java.lang.reflect.Method;
import java.util.ArrayList;

/**
 *
 * @author cccc1
 */
public class ErrorCalculatorGUI extends javax.swing.JFrame{
    
    private String currentNum = "";
    private ArrayList<NumWithError> numWithErrors = new ArrayList<>();
    private NumWithError ans, tempAns;
    private Method op = null;
    private boolean radians = true;
    
    /**
     * Creates new form ERROR
     */
    public ErrorCalculatorGUI() {
        initComponents();
        this.setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        NUMBER_ONE = new javax.swing.JButton();
        NUMBER_TWO = new javax.swing.JButton();
        NUMBER_THREE = new javax.swing.JButton();
        NUMBER_FOUR = new javax.swing.JButton();
        NUMBER_FIVE = new javax.swing.JButton();
        NUMBER_SIX = new javax.swing.JButton();
        NUMBER_SEVEN = new javax.swing.JButton();
        NUMBER_EIGHT = new javax.swing.JButton();
        NUMBER_NINE = new javax.swing.JButton();
        NUMBER_ZERO = new javax.swing.JButton();
        NUMBER_DECIMAL = new javax.swing.JButton();
        OPERATION_ADD = new javax.swing.JButton();
        OPERATION_SUBTRACT = new javax.swing.JButton();
        OPERATION_MULTIPLY = new javax.swing.JButton();
        OPERATION_DIVIDE = new javax.swing.JButton();
        OPERATION_COSINE = new javax.swing.JButton();
        OPERATION_SINE = new javax.swing.JButton();
        OPERATION_TANGENT = new javax.swing.JButton();
        OPERATION_LOG10 = new javax.swing.JButton();
        OPERATION_POWER = new javax.swing.JButton();
        FUNCTION_ANSWER = new javax.swing.JButton();
        FUNCTION_CLEAR = new javax.swing.JButton();
        FUNCTION_EQUALS = new javax.swing.JButton();
        FUNCTION_PLUSMINUS = new javax.swing.JButton();
        FUNCTION_BACKSPACE = new javax.swing.JButton();
        LABEL_TEXT = new javax.swing.JLabel();
        RADDEG = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                formKeyTyped(evt);
            }
        });

        NUMBER_ONE.setText("1");
        NUMBER_ONE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_ONEActionPerformed(evt);
            }
        });

        NUMBER_TWO.setText("2");
        NUMBER_TWO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_TWOActionPerformed(evt);
            }
        });

        NUMBER_THREE.setText("3");
        NUMBER_THREE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_THREEActionPerformed(evt);
            }
        });

        NUMBER_FOUR.setText("4");
        NUMBER_FOUR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_FOURActionPerformed(evt);
            }
        });

        NUMBER_FIVE.setText("5");
        NUMBER_FIVE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_FIVEActionPerformed(evt);
            }
        });

        NUMBER_SIX.setText("6");
        NUMBER_SIX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_SIXActionPerformed(evt);
            }
        });

        NUMBER_SEVEN.setText("7");
        NUMBER_SEVEN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_SEVENActionPerformed(evt);
            }
        });

        NUMBER_EIGHT.setText("8");
        NUMBER_EIGHT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_EIGHTActionPerformed(evt);
            }
        });

        NUMBER_NINE.setText("9");
        NUMBER_NINE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_NINEActionPerformed(evt);
            }
        });

        NUMBER_ZERO.setText("0");
        NUMBER_ZERO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_ZEROActionPerformed(evt);
            }
        });

        NUMBER_DECIMAL.setText(".");
        NUMBER_DECIMAL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NUMBER_DECIMALActionPerformed(evt);
            }
        });

        OPERATION_ADD.setText("+");
        OPERATION_ADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_ADDActionPerformed(evt);
            }
        });

        OPERATION_SUBTRACT.setText("-");
        OPERATION_SUBTRACT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_SUBTRACTActionPerformed(evt);
            }
        });

        OPERATION_MULTIPLY.setText("*");
        OPERATION_MULTIPLY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_MULTIPLYActionPerformed(evt);
            }
        });

        OPERATION_DIVIDE.setText("/");
        OPERATION_DIVIDE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_DIVIDEActionPerformed(evt);
            }
        });

        OPERATION_COSINE.setText("cos");
        OPERATION_COSINE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_COSINEActionPerformed(evt);
            }
        });

        OPERATION_SINE.setText("sin");
        OPERATION_SINE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_SINEActionPerformed(evt);
            }
        });

        OPERATION_TANGENT.setText("tan");
        OPERATION_TANGENT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_TANGENTActionPerformed(evt);
            }
        });

        OPERATION_LOG10.setText("log");
        OPERATION_LOG10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_LOG10ActionPerformed(evt);
            }
        });

        OPERATION_POWER.setText("^");
        OPERATION_POWER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OPERATION_POWERActionPerformed(evt);
            }
        });

        FUNCTION_ANSWER.setText("ANS");
        FUNCTION_ANSWER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUNCTION_ANSWERActionPerformed(evt);
            }
        });

        FUNCTION_CLEAR.setText("AC");
        FUNCTION_CLEAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUNCTION_CLEARActionPerformed(evt);
            }
        });

        FUNCTION_EQUALS.setText("=");
        FUNCTION_EQUALS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUNCTION_EQUALSActionPerformed(evt);
            }
        });

        FUNCTION_PLUSMINUS.setText("±");
        FUNCTION_PLUSMINUS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUNCTION_PLUSMINUSActionPerformed(evt);
            }
        });

        FUNCTION_BACKSPACE.setText("←");
        FUNCTION_BACKSPACE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FUNCTION_BACKSPACEActionPerformed(evt);
            }
        });

        LABEL_TEXT.setBackground(new java.awt.Color(255, 255, 255));
        LABEL_TEXT.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        LABEL_TEXT.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        LABEL_TEXT.setText("0");

        RADDEG.setText("Rad");
        RADDEG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RADDEGActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NUMBER_ZERO, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NUMBER_DECIMAL, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(FUNCTION_EQUALS, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OPERATION_DIVIDE, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NUMBER_SEVEN, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NUMBER_EIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NUMBER_NINE, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OPERATION_MULTIPLY, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(NUMBER_FOUR, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NUMBER_FIVE, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NUMBER_SIX)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(OPERATION_SUBTRACT, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(FUNCTION_PLUSMINUS)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FUNCTION_BACKSPACE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FUNCTION_CLEAR)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(FUNCTION_ANSWER, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(NUMBER_ONE, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(NUMBER_TWO)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(NUMBER_THREE, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(OPERATION_ADD, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(OPERATION_LOG10, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                                    .addComponent(RADDEG, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(OPERATION_SINE, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(OPERATION_COSINE, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(OPERATION_TANGENT, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(OPERATION_POWER, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 23, Short.MAX_VALUE))
                    .addComponent(LABEL_TEXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {FUNCTION_ANSWER, FUNCTION_BACKSPACE, FUNCTION_CLEAR, FUNCTION_EQUALS, FUNCTION_PLUSMINUS, NUMBER_DECIMAL, NUMBER_EIGHT, NUMBER_FIVE, NUMBER_FOUR, NUMBER_NINE, NUMBER_ONE, NUMBER_SEVEN, NUMBER_SIX, NUMBER_THREE, NUMBER_TWO, NUMBER_ZERO, OPERATION_ADD, OPERATION_COSINE, OPERATION_DIVIDE, OPERATION_LOG10, OPERATION_MULTIPLY, OPERATION_POWER, OPERATION_SINE, OPERATION_SUBTRACT, OPERATION_TANGENT, RADDEG});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(LABEL_TEXT, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OPERATION_LOG10)
                    .addComponent(OPERATION_POWER))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OPERATION_COSINE)
                    .addComponent(OPERATION_TANGENT)
                    .addComponent(OPERATION_SINE)
                    .addComponent(RADDEG))
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FUNCTION_ANSWER)
                    .addComponent(FUNCTION_CLEAR)
                    .addComponent(FUNCTION_BACKSPACE)
                    .addComponent(FUNCTION_PLUSMINUS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NUMBER_ONE)
                    .addComponent(NUMBER_TWO)
                    .addComponent(NUMBER_THREE)
                    .addComponent(OPERATION_ADD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NUMBER_FOUR)
                    .addComponent(NUMBER_FIVE)
                    .addComponent(NUMBER_SIX)
                    .addComponent(OPERATION_SUBTRACT))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NUMBER_SEVEN)
                    .addComponent(NUMBER_EIGHT)
                    .addComponent(NUMBER_NINE)
                    .addComponent(OPERATION_MULTIPLY))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OPERATION_DIVIDE)
                    .addComponent(NUMBER_ZERO)
                    .addComponent(NUMBER_DECIMAL)
                    .addComponent(FUNCTION_EQUALS))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {FUNCTION_PLUSMINUS, OPERATION_TANGENT});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {FUNCTION_BACKSPACE, OPERATION_COSINE});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {OPERATION_LOG10, RADDEG});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NUMBER_ONEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_ONEActionPerformed
        handle1();
    }//GEN-LAST:event_NUMBER_ONEActionPerformed
    
    private void handle1(){
        currentNum += "1";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_TWOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_TWOActionPerformed
        handle2();
    }//GEN-LAST:event_NUMBER_TWOActionPerformed
    
    private void handle2(){
        currentNum += "2";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_THREEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_THREEActionPerformed
        handle3();
    }//GEN-LAST:event_NUMBER_THREEActionPerformed
    
    private void handle3(){
        currentNum += "3";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_FOURActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_FOURActionPerformed
        handle4();
    }//GEN-LAST:event_NUMBER_FOURActionPerformed

    private void handle4(){
        currentNum += "4";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_FIVEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_FIVEActionPerformed
        handle5();
    }//GEN-LAST:event_NUMBER_FIVEActionPerformed

    private void handle5(){
        currentNum += "5";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_SIXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_SIXActionPerformed
        handle6();
    }//GEN-LAST:event_NUMBER_SIXActionPerformed

    private void handle6(){
        currentNum += "6";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_SEVENActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_SEVENActionPerformed
        handle7();
    }//GEN-LAST:event_NUMBER_SEVENActionPerformed
    
    private void handle7(){
        currentNum += "7";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_EIGHTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_EIGHTActionPerformed
        handle8();
    }//GEN-LAST:event_NUMBER_EIGHTActionPerformed

    private void handle8(){
        currentNum += "8";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_NINEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_NINEActionPerformed
        handle9();
    }//GEN-LAST:event_NUMBER_NINEActionPerformed
    
    private void handle9(){
        currentNum += "9";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void NUMBER_ZEROActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_ZEROActionPerformed
        handle0();
    }//GEN-LAST:event_NUMBER_ZEROActionPerformed

    private void handle0(){
        currentNum += "0";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
        this.setFocusable(true);
    }
    
    private void NUMBER_DECIMALActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NUMBER_DECIMALActionPerformed
        handleDecimal();
    }//GEN-LAST:event_NUMBER_DECIMALActionPerformed
    
    private void handleDecimal(){
        currentNum += ".";
        LABEL_TEXT.setText(currentNum);
        tempAns = null;
    }
    
    private void OPERATION_ADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_ADDActionPerformed
        handleADD();
    }//GEN-LAST:event_OPERATION_ADDActionPerformed
    
    private void handleADD(){
        handleCalcTwoParam();    
        op = Operations.ADD;
        currentNum = "";
    }
        
    private void OPERATION_SUBTRACTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_SUBTRACTActionPerformed
       handleSUBTRACTION(); 
    }//GEN-LAST:event_OPERATION_SUBTRACTActionPerformed
    
    private void handleSUBTRACTION(){
        handleCalcTwoParam();
        op = Operations.SUBTRACT;
        currentNum = "";
    }
    
    private void OPERATION_MULTIPLYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_MULTIPLYActionPerformed
        handleMULTIPLICATION();
    }//GEN-LAST:event_OPERATION_MULTIPLYActionPerformed
    
    private void handleMULTIPLICATION(){
        handleCalcTwoParam();
        op = Operations.MULTIPLY;
        currentNum = "";
    }
    
    private void OPERATION_DIVIDEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_DIVIDEActionPerformed
        handleDIVIDE();
    }//GEN-LAST:event_OPERATION_DIVIDEActionPerformed

    private void handleDIVIDE(){
        handleCalcTwoParam();
        op = Operations.DIVIDE;
        currentNum = "";
    }
    
    private void handleCalcTwoParam(){
        if(currentNum.length() != 0){
            numWithErrors.add(new NumWithError(currentNum));
        }else if(tempAns != null){
            numWithErrors.add(tempAns);
        }
            LABEL_TEXT.setText("0");
            
        if(numWithErrors.size() >= 2){
            NumWithError result;
            NumWithError[] params = numWithErrors.toArray(new NumWithError[0]);
            try{
                result = NumWithError.calculate(op, params);
                LABEL_TEXT.setText(result.toString());
                numWithErrors.set(0,result);                
                numWithErrors.remove(1);                
                ans =result;
                tempAns = result;
            }catch(IllegalArgumentException e){
                LABEL_TEXT.setText("ERROR:ARGUMENT");
            }catch(NullPointerException e){
                LABEL_TEXT.setText("ERROR:NULL");                
            }catch(Exception e){
                LABEL_TEXT.setText("ERROR");                
            }
        }
        currentNum = "";
    }
    
    private void OPERATION_COSINEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_COSINEActionPerformed
        handleCOSINE();
    }//GEN-LAST:event_OPERATION_COSINEActionPerformed
    
    private void handleCOSINE(){
        if(!radians)
            currentNum = ErrorCalculatorGUI.degToRad(currentNum);
        handleCalcOneParam(Operations.COSINE);
        if(!radians){
            ans = ErrorCalculatorGUI.radToDeg(ans);
            tempAns = ans;
            LABEL_TEXT.setText(ans.toString());
        }
    }
    
    private void OPERATION_SINEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_SINEActionPerformed
        handleSINE();
    }//GEN-LAST:event_OPERATION_SINEActionPerformed

    private void handleSINE(){
        if(!radians)
            currentNum = ErrorCalculatorGUI.degToRad(currentNum);
        handleCalcOneParam(Operations.SINE);
        if(!radians){
            ans = ErrorCalculatorGUI.radToDeg(ans);
            tempAns = ans;
            LABEL_TEXT.setText(ans.toString());
        }
    }
    
    private void OPERATION_TANGENTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_TANGENTActionPerformed
        
        handleTANGENT();
        
    }//GEN-LAST:event_OPERATION_TANGENTActionPerformed
    
    private void handleTANGENT(){
        if(!radians)
            currentNum = ErrorCalculatorGUI.degToRad(currentNum);
        handleCalcOneParam(Operations.TANGENT);
        if(!radians){
            ans = ErrorCalculatorGUI.radToDeg(ans);
            tempAns = ans;
            LABEL_TEXT.setText(ans.toString());
        }
    }
       
    private void OPERATION_LOG10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_LOG10ActionPerformed
        handleLOG10();
    }//GEN-LAST:event_OPERATION_LOG10ActionPerformed
    
    private void handleLOG10(){
        handleCalcOneParam(Operations.LOG10);
    }
    
    private void handleCalcOneParam(Method m){
        if(currentNum.length() != 0){
            try{
                NumWithError result = NumWithError.calculate(m, new NumWithError(currentNum));
                LABEL_TEXT.setText(result.toString());
                tempAns = result;
                ans = result;
            }catch(IllegalArgumentException e){
                LABEL_TEXT.setText("ERROR:ARGUMENT");
            }catch(NullPointerException e){
                LABEL_TEXT.setText("ERROR:NULL");                
            }catch(Exception e){
                LABEL_TEXT.setText("ERROR");                
            }
        }else if(tempAns != null){
            try{
                NumWithError result = NumWithError.calculate(m, tempAns);
                LABEL_TEXT.setText(result.toString());
                tempAns = result;
                ans = result;                
            }catch(IllegalArgumentException e){
                LABEL_TEXT.setText("ERROR:ARGUMENT");
            }catch(NullPointerException e){
                LABEL_TEXT.setText("ERROR:NULL");                
            }catch(Exception e){
                LABEL_TEXT.setText("ERROR");                
            }
        }
    }
    
    private void OPERATION_POWERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OPERATION_POWERActionPerformed
        handlePOWER();
    }//GEN-LAST:event_OPERATION_POWERActionPerformed
    
    private void handlePOWER(){
        handleCalcTwoParam();
        op = Operations.POWER;
        currentNum = "";
    }
    
    private void FUNCTION_ANSWERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUNCTION_ANSWERActionPerformed
        if(ans == null){
            LABEL_TEXT.setText("ERROR:NULL");
        }else{
            LABEL_TEXT.setText(ans.toString());
            currentNum = ans.toString();
        }
    }//GEN-LAST:event_FUNCTION_ANSWERActionPerformed

    private void FUNCTION_CLEARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUNCTION_CLEARActionPerformed
        numWithErrors.clear();
        currentNum = "";
        op = null;
        LABEL_TEXT.setText("0");
        tempAns = null;
        
    }//GEN-LAST:event_FUNCTION_CLEARActionPerformed

    private void FUNCTION_EQUALSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUNCTION_EQUALSActionPerformed
        handleEQUALS();
    }//GEN-LAST:event_FUNCTION_EQUALSActionPerformed
    
    private void handleEQUALS(){
        
        if(currentNum.length() != 0 && op != null){
            NumWithError result;
            numWithErrors.add(new NumWithError(currentNum));
            currentNum = "";
            NumWithError[] params = numWithErrors.toArray(new NumWithError[0]);
            try{
                result = NumWithError.calculate(op, params);
                LABEL_TEXT.setText(result.toString());
                ans =result;
                tempAns = result;
            }catch(IllegalArgumentException e){
                LABEL_TEXT.setText("ERROR:ARGUMENT");
            }catch(NullPointerException e){
                LABEL_TEXT.setText("ERROR:NULL");                
            }catch(Exception e){
                LABEL_TEXT.setText("ERROR");                
            }finally{
                numWithErrors.clear();
            }
                    
        }else if(currentNum.length() != 0 && op == null){
            ans = new NumWithError(currentNum);
            tempAns = new NumWithError(currentNum);
        }
        
    }
    
    private void FUNCTION_PLUSMINUSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUNCTION_PLUSMINUSActionPerformed
        currentNum += "±";
        LABEL_TEXT.setText(currentNum);
    }//GEN-LAST:event_FUNCTION_PLUSMINUSActionPerformed

    private void FUNCTION_BACKSPACEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FUNCTION_BACKSPACEActionPerformed
        handleBACKSPACE();
    }//GEN-LAST:event_FUNCTION_BACKSPACEActionPerformed

    private void formKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyTyped
        switch(evt.getKeyChar()){
            case '0':
                handle0();
                break;
            case '1':
                handle1();
                break;
            case '2':
                handle2();
                break;
            case '3':
                handle3();
                break;
            case '4':
                handle4();
                break;
            case '5':
                handle5();
                break;
            case '6':
                handle6();
                break;
            case '7':
                handle7();
                break;
            case '8':
                handle8();
                break;
            case '9':
                handle9();
                break;
            case '.':
                handleDecimal();
                break;
            case '-':
                handleSUBTRACTION();
                break;
            case '+':
                handleADD();
                break;
            case '/':
                handleDIVIDE();
                break;
            case '*':
                handleMULTIPLICATION();
                break;
            case '=':
                handleEQUALS();
        }
    }//GEN-LAST:event_formKeyTyped

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        switch(evt.getExtendedKeyCode()){
            case 10:
                handleEQUALS();
                break;
            case 8:
                handleBACKSPACE();
                break;
        }
    }//GEN-LAST:event_formKeyPressed

    private void RADDEGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RADDEGActionPerformed
        radians = !radians;
        if(radians)
            RADDEG.setText("Rad");
        else
            RADDEG.setText("Deg");
        
    }//GEN-LAST:event_RADDEGActionPerformed
    
    private static String degToRad(String str){
        return String.valueOf(Math.toDegrees(Double.valueOf(str)));
    }
    
    private static NumWithError radToDeg(NumWithError num){
        return new NumWithError(Math.toRadians(num.getNum()), Math.toRadians(num.getError()));
    }
    
    private void handleBACKSPACE(){
        if(currentNum.length() >= 1){
            String temp = currentNum.substring(0,currentNum.length()-1);
            currentNum = temp;
            LABEL_TEXT.setText(currentNum);        
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ErrorCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ErrorCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ErrorCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ErrorCalculatorGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ErrorCalculatorGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton FUNCTION_ANSWER;
    private javax.swing.JButton FUNCTION_BACKSPACE;
    private javax.swing.JButton FUNCTION_CLEAR;
    private javax.swing.JButton FUNCTION_EQUALS;
    private javax.swing.JButton FUNCTION_PLUSMINUS;
    private javax.swing.JLabel LABEL_TEXT;
    private javax.swing.JButton NUMBER_DECIMAL;
    private javax.swing.JButton NUMBER_EIGHT;
    private javax.swing.JButton NUMBER_FIVE;
    private javax.swing.JButton NUMBER_FOUR;
    private javax.swing.JButton NUMBER_NINE;
    private javax.swing.JButton NUMBER_ONE;
    private javax.swing.JButton NUMBER_SEVEN;
    private javax.swing.JButton NUMBER_SIX;
    private javax.swing.JButton NUMBER_THREE;
    private javax.swing.JButton NUMBER_TWO;
    private javax.swing.JButton NUMBER_ZERO;
    private javax.swing.JButton OPERATION_ADD;
    private javax.swing.JButton OPERATION_COSINE;
    private javax.swing.JButton OPERATION_DIVIDE;
    private javax.swing.JButton OPERATION_LOG10;
    private javax.swing.JButton OPERATION_MULTIPLY;
    private javax.swing.JButton OPERATION_POWER;
    private javax.swing.JButton OPERATION_SINE;
    private javax.swing.JButton OPERATION_SUBTRACT;
    private javax.swing.JButton OPERATION_TANGENT;
    private javax.swing.JButton RADDEG;
    // End of variables declaration//GEN-END:variables

}
